{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\Sproof\\\\client\\\\src\\\\components\\\\NewItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport { Button } from \"@mui/material\";\nimport { DialogActions, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewItem = props => {\n  _s();\n\n  const [stateDialog, updateState] = useState(props.openDialog);\n  const [name, updateName] = useState('');\n  const [info, updateInfo] = useState('');\n  useEffect(() => {\n    updateState(props.openDialog);\n  }, []);\n\n  const handleClose = () => {\n    updateState(false);\n    props.handleCancelling();\n  };\n\n  const addNewList = () => {\n    const newItem = {\n      \"todoID\": props.todoID,\n      \"name\": name,\n      \"info\": info\n    };\n    axios.post('/todo-new-todo', newItem).then(response => props.newListSent(response.data), updateState(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    fullWidth: true,\n    maxWidth: \"xs\",\n    onClose: handleClose,\n    open: stateDialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        margin: \"auto\"\n      },\n      children: \"New TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        margin: \"12px\"\n      },\n      onChange: e => updateName(e.target.value),\n      label: \"Item Name\",\n      placeholder: \"Item Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        margin: \"12px\"\n      },\n      onChange: e => updateInfo(e.target.value),\n      label: \"Item info\",\n      placeholder: \"Item Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleClose(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: info === '' || name === '',\n        onClick: () => addNewList(),\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewItem, \"es2Js41XJIicgdJojv6OZwY6mKc=\");\n\n_c = NewItem;\nexport default NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["C:/Users/ROG/Desktop/Sproof/client/src/components/NewItem.js"],"names":["React","useEffect","useState","DialogTitle","Dialog","Button","DialogActions","TextField","axios","NewItem","props","stateDialog","updateState","openDialog","name","updateName","info","updateInfo","handleClose","handleCancelling","addNewList","newItem","todoID","post","then","response","newListSent","data","margin","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,QAAuC,eAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAaC,WAAb,IAA0BV,QAAQ,CAACQ,KAAK,CAACG,UAAP,CAAxC;AACA,QAAM,CAACC,IAAD,EAAMC,UAAN,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAMC,UAAN,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,WAAW,CAACF,KAAK,CAACG,UAAP,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACtBN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,KAAK,CAACS,gBAAN;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAG;AAAC,gBAASX,KAAK,CAACY,MAAhB;AAAwB,cAAQR,IAAhC;AAAuC,cAAOE;AAA9C,KAAhB;AACAR,IAAAA,KAAK,CAACe,IAAN,CAAW,gBAAX,EAA6BF,OAA7B,EAAsCG,IAAtC,CAA2CC,QAAQ,IACnDf,KAAK,CAACgB,WAAN,CAAkBD,QAAQ,CAACE,IAA3B,CADA,EAEAf,WAAW,CAAC,KAAD,CAFX;AAGH,GALD;;AAMA,sBACI,QAAC,MAAD;AAAU,IAAA,SAAS,MAAnB;AACS,IAAA,QAAQ,EAAC,IADlB;AACuB,IAAA,OAAO,EAAEM,WADhC;AAC6C,IAAA,IAAI,EAAEP,WADnD;AAAA,4BAEI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAACiB,QAAAA,MAAM,EAAC;AAAR,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACA,QAAAA,MAAM,EAAC;AAAR,OAAlB;AACW,MAAA,QAAQ,EAAGC,CAAD,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CADpC;AAEW,MAAA,KAAK,EAAC,WAFjB;AAE6B,MAAA,WAAW,EAAC;AAFzC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACH,QAAAA,MAAM,EAAC;AAAR,OAAlB;AACW,MAAA,QAAQ,EAAGC,CAAD,IAAKZ,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CADpC;AAEW,MAAA,KAAK,EAAC,WAFjB;AAE6B,MAAA,WAAW,EAAC;AAFzC;AAAA;AAAA;AAAA;AAAA,YANJ,eASI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAIb,WAAW,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEF,IAAI,KAAK,EAAT,IAAeF,IAAI,KAAG,EAAxC;AAA4C,QAAA,OAAO,EAAE,MAAIM,UAAU,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAlCD;;GAAMX,O;;KAAAA,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport {Button} from \"@mui/material\";\r\nimport {DialogActions, TextField} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nconst NewItem = (props) => {\r\n    const [stateDialog,updateState]=useState(props.openDialog)\r\n    const [name,updateName]=useState('')\r\n    const [info,updateInfo]=useState('')\r\n    useEffect(()=>{\r\n        updateState(props.openDialog)\r\n    },[])\r\n    const handleClose = () => {\r\n        updateState(false)\r\n        props.handleCancelling()\r\n    };\r\n\r\n    const addNewList = () => {\r\n        const newItem = {\"todoID\":props.todoID, \"name\": name , \"info\":info};\r\n        axios.post('/todo-new-todo', newItem).then(response =>\r\n        props.newListSent(response.data),\r\n        updateState(false))\r\n    }\r\n    return(\r\n        <Dialog   fullWidth\r\n                 maxWidth='xs' onClose={handleClose} open={stateDialog}>\r\n            <DialogTitle style={{margin:\"auto\"}}>New TodoList</DialogTitle>\r\n            <TextField style={{margin:\"12px\"}}\r\n                       onChange={(e)=>updateName(e.target.value)}\r\n                       label=\"Item Name\" placeholder=\"Item Name\"/>\r\n            <TextField style={{margin:\"12px\"}}\r\n                       onChange={(e)=>updateInfo(e.target.value)}\r\n                       label=\"Item info\" placeholder=\"Item Description\"/>\r\n            <DialogActions>\r\n                <Button onClick={()=>handleClose()}>Cancel</Button>\r\n                <Button disabled={info === '' || name===''} onClick={()=>addNewList()}> Add </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default NewItem"]},"metadata":{},"sourceType":"module"}