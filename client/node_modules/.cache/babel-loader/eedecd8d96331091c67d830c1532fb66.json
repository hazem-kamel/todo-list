{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\Sproof\\\\client\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, ListItem } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport { Tooltip } from \"@mui/material\";\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { AddBox } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { CheckCircle } from \"@mui/icons-material\";\nimport { CheckBoxSharp } from \"@mui/icons-material\";\nimport { Divider } from \"@mui/material\";\nimport { Info } from \"@mui/icons-material\";\nimport { Close } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport NewTodoList from \"./NewTodoList\";\nimport NewItem from \"./NewItem\";\nimport DeleteComponent from \"./deleteComponent\";\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [openNewTodo, updateOpenNewTodo] = useState(false);\n  const [openNewItem, updateOpenNewItem] = useState(false);\n  const [deleteItem, updateDeleteItem] = useState(false);\n  const [deleteList, updateDeleteList] = useState(false);\n  const [selectedItem, updateSelectedItem] = useState(null);\n  const [selectedList, updateSelectedList] = useState(null);\n  const [todoLists, updateTodoLists] = useState([]);\n  useEffect(() => {\n    axios.get('/todo-list').then(res => {\n      updateTodoLists(res.data.lists);\n    });\n  }, []);\n\n  const handleNewDataSaved = Data => {\n    updateTodoLists(Data.lists);\n    updateOpenNewTodo(false);\n    updateOpenNewItem(false);\n  };\n\n  const changeStatus = (todo, status, list) => {\n    let statusItem = status;\n    statusItem === 'notFinished' ? statusItem = 'Finished' : statusItem = 'notFinished';\n    const itemModified = {\n      \"todoID\": todo,\n      \"status\": statusItem,\n      list: list\n    };\n    axios.post('/todo-status', itemModified).then(response => updateTodoLists(response.data.lists));\n  };\n\n  const handleCancelling = () => {\n    updateOpenNewTodo(false);\n    updateOpenNewItem(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mainCard\",\n    style: {\n      margin: \"12px\",\n      height: \"600px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todo Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => updateOpenNewTodo(true),\n      variant: \"contained\",\n      style: {\n        margin: \"12px\"\n      },\n      color: \"secondary\",\n      children: \"Add New TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), openNewTodo ? /*#__PURE__*/_jsxDEV(NewTodoList, {\n      newListSent: handleNewDataSaved,\n      handleCancelling: handleCancelling,\n      openDialog: openNewTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        marginBottom: \"12px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 6,\n      children: todoLists.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [openNewItem ? /*#__PURE__*/_jsxDEV(NewItem, {\n              todoID: selectedItem,\n              newListSent: handleNewDataSaved,\n              handleCancelling: handleCancelling,\n              openDialog: openNewItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 44\n            }, this) : null, deleteItem ? /*#__PURE__*/_jsxDEV(DeleteComponent, {\n              deletingInfo: \"deleteItem\",\n              listID: selectedList,\n              todoID: selectedItem,\n              newListSent: handleNewDataSaved,\n              handleCancelling: handleCancelling,\n              openDialog: deleteItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 43\n            }, this) : null, deleteList ? /*#__PURE__*/_jsxDEV(DeleteComponent, {\n              deletingInfo: \"deleteList\",\n              listID: selectedList,\n              todoID: selectedItem,\n              newListSent: handleNewDataSaved,\n              handleCancelling: handleCancelling,\n              openDialog: deleteList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 43\n            }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                width: '100%',\n                maxWidth: 360,\n                bgcolor: 'background.paper'\n              },\n              component: \"nav\",\n              \"aria-labelledby\": \"nested-list-subheader\",\n              subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  background: \"rgb(219 250 243)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                  style: {\n                    background: \"rgb(219 250 243)\"\n                  },\n                  id: \"nested-list-subheader\",\n                  children: item.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    margin: \"8px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AddBox, {\n                      style: {\n                        fontSize: \"18px\"\n                      },\n                      onClick: () => (updateOpenNewItem(true), updateSelectedItem(item.id))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 81\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Delete, {\n                      style: {\n                        fontSize: \"18px\"\n                      },\n                      onClick: () => (updateDeleteList(true), updateSelectedList(item.id)),\n                      color: \"error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this),\n              children: item.todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  style: todo.status === 'Finished' ? {\n                    textDecorationLine: 'line-through',\n                    textDecorationStyle: 'solid'\n                  } : null,\n                  children: [todo.status !== 'notFinished' ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                      style: {\n                        color: '#2e7d32'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 91\n                  }, this) : null, /*#__PURE__*/_jsxDEV(ListItemText, {\n                    children: todo.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: todo.info,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      style: {\n                        minWidth: \"30px\"\n                      },\n                      dense: \"true\",\n                      size: \"small\",\n                      color: \"primary\",\n                      children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    onClick: () => (updateDeleteItem(true), updateSelectedItem(todo.id), updateSelectedList(item.id)),\n                    color: \"error\",\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    style: {\n                      minWidth: \"6px\",\n                      width: \"10px\"\n                    },\n                    onClick: () => changeStatus(todo.id, todo.status, item.id),\n                    color: todo.status === 'notFinished' ? \"success\" : \"warning\",\n                    children: todo.status === 'notFinished' ? /*#__PURE__*/_jsxDEV(CheckBoxSharp, {\n                      style: {\n                        fontSize: \"12px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 69\n                    }, this) : /*#__PURE__*/_jsxDEV(Close, {\n                      style: {\n                        fontSize: \"12px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 69\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 57\n                  }, this)]\n                }, todo.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 53\n                }, this)]\n              }, todo.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"wI2mi+e0QKNPhUyZZ0IOyQmznJ0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/ROG/Desktop/Sproof/client/src/components/Main.js"],"names":["React","useState","useEffect","Button","Card","ListItem","Grid","ListSubheader","List","Tooltip","ListItemIcon","ListItemText","AddBox","Delete","CheckCircle","CheckBoxSharp","Divider","Info","Close","axios","NewTodoList","NewItem","DeleteComponent","Main","openNewTodo","updateOpenNewTodo","openNewItem","updateOpenNewItem","deleteItem","updateDeleteItem","deleteList","updateDeleteList","selectedItem","updateSelectedItem","selectedList","updateSelectedList","todoLists","updateTodoLists","get","then","res","data","lists","handleNewDataSaved","Data","changeStatus","todo","status","list","statusItem","itemModified","post","response","handleCancelling","margin","height","marginBottom","map","item","index","width","maxWidth","bgcolor","display","background","Title","minWidth","fontSize","id","todos","textDecorationLine","textDecorationStyle","color","name","info"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Button, Card, ListItem} from \"@mui/material\";\r\nimport {Grid} from \"@mui/material\";\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport {Tooltip} from \"@mui/material\";\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport {AddBox} from \"@mui/icons-material\";\r\nimport {Delete} from \"@mui/icons-material\";\r\nimport {CheckCircle} from \"@mui/icons-material\";\r\nimport {CheckBoxSharp} from \"@mui/icons-material\";\r\nimport {Divider} from \"@mui/material\";\r\nimport {Info} from \"@mui/icons-material\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport NewTodoList from \"./NewTodoList\";\r\nimport NewItem from \"./NewItem\";\r\nimport DeleteComponent from \"./deleteComponent\";\r\nimport './Main.css'\r\nconst Main = () => {\r\nconst [openNewTodo,updateOpenNewTodo]=useState(false)\r\nconst [openNewItem,updateOpenNewItem]=useState(false)\r\nconst [deleteItem,updateDeleteItem]=useState(false)\r\nconst [deleteList,updateDeleteList]=useState(false)\r\nconst [selectedItem,updateSelectedItem]=useState(null)\r\nconst [selectedList,updateSelectedList]=useState(null)\r\nconst [todoLists,updateTodoLists]=useState([])\r\n\r\nuseEffect(()=>{\r\n   axios.get('/todo-list').then(res=>{\r\n       updateTodoLists(res.data.lists)\r\n   })\r\n},[])\r\nconst handleNewDataSaved = (Data) => {\r\n    updateTodoLists(Data.lists);\r\n    updateOpenNewTodo(false)\r\n    updateOpenNewItem(false)\r\n}\r\nconst changeStatus=(todo,status,list)=>{\r\n    let statusItem=status\r\n    statusItem === 'notFinished' ? statusItem = 'Finished' : statusItem ='notFinished'\r\n    const itemModified = {\"todoID\":todo, \"status\":statusItem,list:list};\r\n    axios.post('/todo-status', itemModified).then(response =>     updateTodoLists(response.data.lists)\r\n    );\r\n\r\n}\r\nconst handleCancelling = () => {\r\n    updateOpenNewTodo(false)\r\n    updateOpenNewItem(false)\r\n}\r\nreturn(\r\n    <Card className=\"mainCard\" style={{margin:\"12px\",height:\"600px\"}}>\r\n        <h3>Todo Lists</h3>\r\n        <Button  onClick={()=>updateOpenNewTodo(true)} variant=\"contained\" style={{margin:\"12px\"}}\r\n                 color=\"secondary\">Add New TodoList</Button>\r\n        {openNewTodo ? <NewTodoList\r\n            newListSent={handleNewDataSaved}\r\n            handleCancelling={handleCancelling}\r\n            openDialog={openNewTodo}/> : null}\r\n\r\n        <Divider style={{marginBottom:\"12px\"}}/>\r\n        <Grid container spacing={6}>\r\n            {\r\n                todoLists.map((item,index)=>{\r\n                    return   <Grid item xs={12} md={3} key={item.id}>\r\n                        <Card>\r\n                            {openNewItem ? <NewItem todoID={selectedItem}\r\n                                                    newListSent={handleNewDataSaved}\r\n                                                    handleCancelling={handleCancelling}\r\n                                                    openDialog={openNewItem}/> : null}\r\n                            {deleteItem ? <DeleteComponent  deletingInfo=\"deleteItem\" listID={selectedList}\r\n                                                            todoID={selectedItem}\r\n                                                            newListSent={handleNewDataSaved}\r\n                                                            handleCancelling={handleCancelling}\r\n                                                           openDialog={deleteItem}/> : null}\r\n                            {deleteList ? <DeleteComponent deletingInfo=\"deleteList\" listID={selectedList}\r\n                                                           todoID={selectedItem}\r\n                                                           newListSent={handleNewDataSaved}\r\n                                                           handleCancelling={handleCancelling}\r\n                                                           openDialog={deleteList}/> : null}\r\n                            <List\r\n                                sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\r\n                                component=\"nav\"\r\n                                aria-labelledby=\"nested-list-subheader\"\r\n                                subheader={\r\n                                    <div style={{display:\"flex\",background: \"rgb(219 250 243)\"}}>\r\n                                        <ListSubheader style={{background: \"rgb(219 250 243)\"}}   id=\"nested-list-subheader\">\r\n                                            {item.Title}\r\n                                        </ListSubheader>\r\n\r\n                                        <div style={{    margin: \"8px\"}}>\r\n                                            <Button  style={{minWidth:\"30px\"}} ><AddBox style={{fontSize:\"18px\"}}\r\n                                                                                        onClick={()=>(updateOpenNewItem(true)\r\n                                                ,updateSelectedItem(item.id))} /></Button>\r\n                                            <Button style={{minWidth:\"30px\"}}><Delete style={{fontSize:\"18px\"}}\r\n                                                                                      onClick={()=>(updateDeleteList(true),\r\n                                                updateSelectedList(item.id))} color=\"error\"/>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                }>\r\n                                {item.todos.map((todo) =>\r\n                                            <div key={todo.id}>\r\n                                                    <ListItem  style={todo.status=== 'Finished' ? {\r\n                                                        textDecorationLine: 'line-through',\r\n                                                        textDecorationStyle: 'solid'\r\n                                                    } : null} key={todo.id}>\r\n                                                        {todo.status !== 'notFinished' ?  <ListItemIcon>\r\n                                                            <CheckCircle style={{color:'#2e7d32'}} />\r\n                                                        </ListItemIcon> : null}\r\n                                                        <ListItemText>{todo.name}</ListItemText>\r\n                                                        <Tooltip title={todo.info}>\r\n                                                            <Button style={{minWidth:\"30px\"}}  dense=\"true\" size=\"small\" color=\"primary\">\r\n                                                                <Info/>\r\n                                                            </Button>\r\n                                                        </Tooltip>\r\n                                                        <Button style={{minWidth:\"30px\"}}\r\n                                                                onClick={()=>(updateDeleteItem(true),\r\n                                                            updateSelectedItem(todo.id),updateSelectedList(item.id))}\r\n                                                                color=\"error\">\r\n                                                            <Delete/>\r\n                                                        </Button>\r\n                                                        <Button variant=\"outlined\" style={{minWidth:\"6px\",width:\"10px\"}}\r\n                                                                onClick={()=>changeStatus(todo.id,todo.status,item.id)}\r\n                                                                color={todo.status === 'notFinished' ? \"success\": \"warning\"}>\r\n                                                            {\r\n                                                                todo.status === 'notFinished' ?\r\n                                                                    <CheckBoxSharp style={{fontSize:\"12px\"}}/> :\r\n                                                                    <Close style={{fontSize:\"12px\"}}/>\r\n                                                            }\r\n                                                        </Button>\r\n                                                    </ListItem>\r\n                                                    <Divider/>\r\n                                            </div>\r\n\r\n                                )}\r\n\r\n                            </List>\r\n                        </Card>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n\r\n    </Card>\r\n)\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}