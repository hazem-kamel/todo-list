{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\Sproof\\\\client\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, ListItem } from \"@mui/material\";\nimport { Grid } from \"@mui/material\";\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport { Tooltip } from \"@mui/material\";\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { AddBox } from \"@mui/icons-material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { CheckCircle } from \"@mui/icons-material\";\nimport { CheckBoxSharp } from \"@mui/icons-material\";\nimport { Divider } from \"@mui/material\";\nimport { Info } from \"@mui/icons-material\";\nimport { Close } from \"@mui/icons-material\";\nimport axios from \"axios\";\nimport NewTodoList from \"./NewTodoList\";\nimport NewItem from \"./NewItem\";\nimport DeleteComponent from \"./deleteComponent\";\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [openNewTodo, updateOpenNewTodo] = useState(false);\n  const [openNewItem, updateOpenNewItem] = useState(false);\n  const [deleteItem, updateDeleteItem] = useState(false);\n  const [deleteList, updateDeleteList] = useState(false);\n  const [selectedItem, updateSelectedItem] = useState(null);\n  const [selectedList, updateSelectedList] = useState(null);\n  const [todoLists, updateTodoLists] = useState([]);\n  useEffect(() => {\n    axios.get('/todo-list').then(res => {\n      updateTodoLists(res.data.lists);\n    });\n  }, []);\n\n  const changeStatus = (todo, status, list) => {\n    let statusItem = status;\n    statusItem === 'notFinished' ? statusItem = 'Finished' : statusItem = 'notFinished';\n    const itemModified = {\n      \"todoID\": todo,\n      \"status\": statusItem,\n      list: list\n    };\n    axios.post('/todo-status', itemModified).then(response => alert(JSON.stringify(itemModified)));\n  };\n\n  const handleData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mainCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todo Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        maxWidth: \"12px\"\n      },\n      onClick: () => updateOpenNewTodo(true),\n      color: \"success\",\n      children: \"Add New TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), openNewTodo ? /*#__PURE__*/_jsxDEV(NewTodoList, {\n      openDialog: openNewTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 28\n    }, this) : null, /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        marginBottom: \"12px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 6,\n      children: todoLists.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [openNewItem ? /*#__PURE__*/_jsxDEV(NewItem, {\n              todoID: selectedItem,\n              openDialog: openNewItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 48\n            }, this) : null, deleteItem ? /*#__PURE__*/_jsxDEV(DeleteComponent, {\n              deletingInfo: \"deleteItem\",\n              listID: selectedList,\n              todoID: selectedItem,\n              openDialog: deleteItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 47\n            }, this) : null, deleteList ? /*#__PURE__*/_jsxDEV(DeleteComponent, {\n              deletingInfo: \"deleteList\",\n              listID: selectedList,\n              todoID: selectedItem,\n              openDialog: deleteList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 47\n            }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                width: '100%',\n                maxWidth: 360,\n                bgcolor: 'background.paper'\n              },\n              component: \"nav\",\n              \"aria-labelledby\": \"nested-list-subheader\",\n              subheader: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  float: \"right\",\n                  background: \"rgb(219 250 243)\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                  style: {\n                    background: \"#a7ffeb\"\n                  },\n                  id: \"nested-list-subheader\",\n                  children: item.Title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginLeft: \"84px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AddBox, {\n                      style: {\n                        fontSize: \"18px\"\n                      },\n                      onClick: () => (updateOpenNewItem(true), updateSelectedItem(item.id))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 84\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Delete, {\n                      style: {\n                        fontSize: \"18px\"\n                      },\n                      onClick: () => (updateDeleteList(true), updateSelectedList(item.id)),\n                      color: \"error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 83\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this),\n              children: item.todos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n                style: todo.status === 'Finished' ? {\n                  textDecorationLine: 'line-through',\n                  textDecorationStyle: 'solid'\n                } : null,\n                children: [todo.status !== 'notFinished' ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    style: {\n                      color: '#2e7d32'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 79\n                }, this) : null, /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: todo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: todo.info,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      minWidth: \"30px\"\n                    },\n                    dense: \"true\",\n                    size: \"small\",\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(Info, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    minWidth: \"30px\"\n                  },\n                  onClick: () => (updateDeleteItem(true), updateSelectedItem(todo.id), updateSelectedList(item.id)),\n                  color: \"error\",\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    minWidth: \"30px\"\n                  },\n                  onClick: () => changeStatus(todo.id, todo.status, item.id),\n                  color: todo.status === 'notFinished' ? \"success\" : \"warning\",\n                  children: todo.status === 'notFinished' ? /*#__PURE__*/_jsxDEV(CheckBoxSharp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 85\n                  }, this) : /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 103\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this)]\n              }, todo.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 34\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"wI2mi+e0QKNPhUyZZ0IOyQmznJ0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/ROG/Desktop/Sproof/client/src/components/Main.js"],"names":["React","useState","useEffect","Button","Card","ListItem","Grid","ListSubheader","List","Tooltip","ListItemIcon","ListItemText","AddBox","Delete","CheckCircle","CheckBoxSharp","Divider","Info","Close","axios","NewTodoList","NewItem","DeleteComponent","Main","openNewTodo","updateOpenNewTodo","openNewItem","updateOpenNewItem","deleteItem","updateDeleteItem","deleteList","updateDeleteList","selectedItem","updateSelectedItem","selectedList","updateSelectedList","todoLists","updateTodoLists","get","then","res","data","lists","changeStatus","todo","status","list","statusItem","itemModified","post","response","alert","JSON","stringify","handleData","maxWidth","marginBottom","map","item","index","width","bgcolor","display","float","background","Title","marginLeft","minWidth","fontSize","id","todos","textDecorationLine","textDecorationStyle","color","name","info"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {Button, Card, ListItem} from \"@mui/material\";\r\nimport {Grid} from \"@mui/material\";\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport {Tooltip} from \"@mui/material\";\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport {AddBox} from \"@mui/icons-material\";\r\nimport {Delete} from \"@mui/icons-material\";\r\nimport {CheckCircle} from \"@mui/icons-material\";\r\nimport {CheckBoxSharp} from \"@mui/icons-material\";\r\nimport {Divider} from \"@mui/material\";\r\nimport {Info} from \"@mui/icons-material\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport NewTodoList from \"./NewTodoList\";\r\nimport NewItem from \"./NewItem\";\r\nimport DeleteComponent from \"./deleteComponent\";\r\nimport './Main.css'\r\nconst Main = () => {\r\n    const [openNewTodo,updateOpenNewTodo]=useState(false)\r\n    const [openNewItem,updateOpenNewItem]=useState(false)\r\n    const [deleteItem,updateDeleteItem]=useState(false)\r\n    const [deleteList,updateDeleteList]=useState(false)\r\n    const [selectedItem,updateSelectedItem]=useState(null)\r\n    const [selectedList,updateSelectedList]=useState(null)\r\n\r\n    const [todoLists,updateTodoLists]=useState([])\r\n    useEffect(()=>{\r\n       axios.get('/todo-list').then(res=>{\r\n           updateTodoLists(res.data.lists)\r\n       })\r\n    },[])\r\n    const changeStatus=(todo,status,list)=>{\r\n        let statusItem=status\r\n        statusItem === 'notFinished' ? statusItem = 'Finished' : statusItem ='notFinished'\r\n        const itemModified = {\"todoID\":todo, \"status\":statusItem,list:list};\r\n        axios.post('/todo-status', itemModified).then(response => alert(JSON.stringify(itemModified)));\r\n    }\r\n    const handleData=()=>{\r\n\r\n    }\r\n    return(\r\n        <Card className=\"mainCard\">\r\n            <h3>Todo Lists</h3>\r\n            <Button style={{maxWidth:\"12px\"}} onClick={()=>updateOpenNewTodo(true)} color=\"success\">Add New TodoList</Button>\r\n            {openNewTodo ? <NewTodoList openDialog={openNewTodo}/> : null}\r\n            <Divider style={{marginBottom:\"12px\"}}/>\r\n            <Grid container spacing={6}>\r\n                {\r\n                    todoLists.map((item,index)=>{\r\n                        return   <Grid item xs={12} md={3} key={item.id}>\r\n                            <Card>\r\n                                {openNewItem ? <NewItem todoID={selectedItem}  openDialog={openNewItem}/> : null}\r\n                                {deleteItem ? <DeleteComponent  deletingInfo=\"deleteItem\" listID={selectedList} todoID={selectedItem}\r\n                                                               openDialog={deleteItem}/> : null}\r\n                                {deleteList ? <DeleteComponent deletingInfo=\"deleteList\" listID={selectedList} todoID={selectedItem}\r\n                                                               openDialog={deleteList}/> : null}\r\n                                <List\r\n                                    sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}\r\n                                    component=\"nav\"\r\n                                    aria-labelledby=\"nested-list-subheader\"\r\n                                    subheader={\r\n                                        <div style={{display:\"flex\",float:\"right\",background: \"rgb(219 250 243)\"}}>\r\n                                            <ListSubheader style={{background: \"#a7ffeb\"}}   id=\"nested-list-subheader\">\r\n                                                {item.Title}\r\n                                            </ListSubheader>\r\n\r\n                                            <div style={{marginLeft:\"84px\"}}>\r\n                                                <Button style={{minWidth:\"30px\"}} ><AddBox style={{fontSize:\"18px\"}} onClick={()=>(updateOpenNewItem(true)\r\n                                                    ,updateSelectedItem(item.id))} /></Button>\r\n                                                <Button style={{minWidth:\"30px\"}}><Delete style={{fontSize:\"18px\"}} onClick={()=>(updateDeleteList(true),\r\n                                                    updateSelectedList(item.id))} color=\"error\"/>\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }>\r\n                                    {item.todos.map((todo) =>\r\n                                        <ListItem  style={todo.status=== 'Finished' ? {\r\n                                            textDecorationLine: 'line-through',\r\n                                            textDecorationStyle: 'solid'\r\n                                        } : null} key={todo.id}>\r\n                                            {todo.status !== 'notFinished' ?  <ListItemIcon>\r\n                                                <CheckCircle style={{color:'#2e7d32'}} />\r\n                                            </ListItemIcon> : null}\r\n                                            <ListItemText>{todo.name}</ListItemText>\r\n                                            <Tooltip title={todo.info}>\r\n                                                <Button style={{minWidth:\"30px\"}}  dense=\"true\" size=\"small\" color=\"primary\">\r\n                                                    <Info/>\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                            <Button style={{minWidth:\"30px\"}} onClick={()=>(updateDeleteItem(true),\r\n                                                updateSelectedItem(todo.id),updateSelectedList(item.id))} color=\"error\">\r\n                                                <Delete/>\r\n                                            </Button>\r\n                                            <Button style={{minWidth:\"30px\"}} onClick={()=>changeStatus(todo.id,todo.status,item.id)}\r\n                                                    color={todo.status === 'notFinished' ? \"success\": \"warning\"}>\r\n                                                {\r\n                                                    todo.status === 'notFinished' ? <CheckBoxSharp/>: <Close/>\r\n                                                }\r\n                                            </Button>\r\n                                        </ListItem>\r\n                                    )}\r\n\r\n                                </List>\r\n                            </Card>\r\n                        </Grid>\r\n                    })\r\n                }\r\n            </Grid>\r\n\r\n        </Card>\r\n    )\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}